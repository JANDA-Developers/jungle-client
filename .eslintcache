[{"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\index.tsx":"1","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\App.tsx":"2","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useMeQuery.ts":"3","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\page\\admin\\Admin.tsx":"4","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\page\\View.tsx":"5","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\PageLoading.tsx":"6","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\page\\Login.tsx":"7","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\page\\SignUp.tsx":"8","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\apolloClient.tsx":"9","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\gql\\user.ts":"10","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useWebSite.ts":"11","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\usePageEidt.ts":"12","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useUser.ts":"13","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\WebPageModal.tsx":"14","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\Header.tsx":"15","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\page\\admin\\WebPageCard.tsx":"16","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\ViewModeLayout.tsx":"17","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\completeMsg.ts":"18","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\uri.ts":"19","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\cache.ts":"20","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\query.ts":"21","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\gql\\webPage.ts":"22","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useMultiSelect.ts":"23","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\validater.ts":"24","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\pageEdit.tsx":"25","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\type\\api.ts":"26","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\utils.tsx":"27","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\Template.tsx":"28","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\type\\const.tsx":"29","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\template\\templates.tsx":"30","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\gql\\utils.ts":"31","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useListQuery.ts":"32","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\BackStepBar.tsx":"33","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\template\\info\\sampleInfo.ts":"34","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\template\\source\\SampleTemplate.tsx":"35","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\PageEditBtn.tsx":"36","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\deepCopy.ts":"37","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\Img.tsx":"38","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\Upload.tsx":"39","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useUpload.ts":"40","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\gql\\file.ts":"41","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\Content.tsx":"42","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\editor\\Editor.tsx":"43","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\editor\\EditorView.tsx":"44","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\TimeSpace.tsx":"45","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\LanguageChnager.tsx":"46"},{"size":348,"mtime":1608091732419,"results":"47","hashOfConfig":"48"},{"size":1483,"mtime":1608093595063,"results":"49","hashOfConfig":"48"},{"size":256,"mtime":1608034147519,"results":"50","hashOfConfig":"48"},{"size":1491,"mtime":1608093575095,"results":"51","hashOfConfig":"48"},{"size":1762,"mtime":1608117331150,"results":"52","hashOfConfig":"48"},{"size":146,"mtime":1608034147504,"results":"53","hashOfConfig":"48"},{"size":1298,"mtime":1608093703128,"results":"54","hashOfConfig":"48"},{"size":1208,"mtime":1608080334089,"results":"55","hashOfConfig":"48"},{"size":1096,"mtime":1608034147470,"results":"56","hashOfConfig":"48"},{"size":679,"mtime":1608034147487,"results":"57","hashOfConfig":"48"},{"size":1107,"mtime":1608034147526,"results":"58","hashOfConfig":"48"},{"size":639,"mtime":1608117333274,"results":"59","hashOfConfig":"48"},{"size":409,"mtime":1608094904274,"results":"60","hashOfConfig":"48"},{"size":4421,"mtime":1608081213766,"results":"61","hashOfConfig":"48"},{"size":1212,"mtime":1608034147500,"results":"62","hashOfConfig":"48"},{"size":2065,"mtime":1608081001755,"results":"63","hashOfConfig":"48"},{"size":958,"mtime":1608117299239,"results":"64","hashOfConfig":"48"},{"size":1134,"mtime":1608037756525,"results":"65","hashOfConfig":"48"},{"size":211,"mtime":1608034147493,"results":"66","hashOfConfig":"48"},{"size":170,"mtime":1608034147472,"results":"67","hashOfConfig":"48"},{"size":3882,"mtime":1608084238768,"results":"68","hashOfConfig":"48"},{"size":2091,"mtime":1608081247525,"results":"69","hashOfConfig":"48"},{"size":427,"mtime":1608034147521,"results":"70","hashOfConfig":"48"},{"size":1541,"mtime":1608034147574,"results":"71","hashOfConfig":"48"},{"size":5769,"mtime":1608103206767,"results":"72","hashOfConfig":"48"},{"size":13960,"mtime":1608091992963,"results":"73","hashOfConfig":"48"},{"size":703,"mtime":1608034147573,"results":"74","hashOfConfig":"48"},{"size":629,"mtime":1608034147505,"results":"75","hashOfConfig":"48"},{"size":781,"mtime":1608034147562,"results":"76","hashOfConfig":"48"},{"size":710,"mtime":1608095486680,"results":"77","hashOfConfig":"48"},{"size":237,"mtime":1608034147489,"results":"78","hashOfConfig":"48"},{"size":1191,"mtime":1608034147518,"results":"79","hashOfConfig":"48"},{"size":799,"mtime":1608093720670,"results":"80","hashOfConfig":"48"},{"size":1667,"mtime":1608108307808,"results":"81","hashOfConfig":"48"},{"size":6487,"mtime":1608108309187,"results":"82","hashOfConfig":"48"},{"size":1097,"mtime":1608094417611,"results":"83","hashOfConfig":"48"},{"size":346,"mtime":1608095747453,"results":"84","hashOfConfig":"48"},{"size":519,"mtime":1608108740926,"results":"85","hashOfConfig":"48"},{"size":989,"mtime":1608100942813,"results":"86","hashOfConfig":"48"},{"size":928,"mtime":1608099033626,"results":"87","hashOfConfig":"48"},{"size":568,"mtime":1608101135180,"results":"88","hashOfConfig":"48"},{"size":711,"mtime":1608108769112,"results":"89","hashOfConfig":"48"},{"size":6712,"mtime":1608108971664,"results":"90","hashOfConfig":"48"},{"size":380,"mtime":1608034147511,"results":"91","hashOfConfig":"48"},{"size":1452,"mtime":1608108399649,"results":"92","hashOfConfig":"48"},{"size":510,"mtime":1608117397365,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"15acrxv",{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"96"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\index.tsx",[],["202","203"],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\App.tsx",["204"],"import React, { Suspense, useState } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport { Toast } from '@janda-com/front';\r\nimport { useMeQuery } from './hook/useMeQuery';\r\nimport { Fuser } from './type/api';\r\nimport { PageLoading } from './component/PageLoading';\r\nimport \"./scss/Admin.scss\"\r\nconst Admin = React.lazy(() => import(\"./page/admin/Admin\"))\r\nconst View = React.lazy(() => import(\"./page/View\"))\r\nconst SignUp = React.lazy(() => import(\"./page/SignUp\"))\r\nconst Login = React.lazy(() => import(\"./page/Login\"))\r\nexport interface IAPPContext {\r\n    me?: null | Fuser;\r\n}\r\n\r\nexport const APPconetxt = React.createContext<IAPPContext>({})\r\n\r\nexport enum Paths {\r\n    \"VIEW\" = \"/\",\r\n    \"ADMIN\" = \"/admin/\",\r\n    \"LOGIN\" = \"/login\",\r\n    \"SIGNUP\" = \"/signUp\",\r\n}\r\n\r\nexport const APP: React.FC = () => {\r\n    const { me, loading } = useMeQuery()\r\n\r\n    if (loading) return <PageLoading />\r\n    return <APPconetxt.Provider value={{ me }}>\r\n        <HashRouter>\r\n            <Suspense fallback={<div>ass</div>}>\r\n                <Switch>\r\n                    <Route exact path={Paths.VIEW} component={View} />\r\n                    <Route path={Paths.LOGIN} component={Login} />\r\n                    <Route path={Paths.SIGNUP} component={SignUp} />\r\n                    <Route path={Paths.ADMIN} component={Admin} />\r\n                </Switch>\r\n            </Suspense>\r\n        </HashRouter>\r\n        <Toast />\r\n    </APPconetxt.Provider>;\r\n};\r\n","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useMeQuery.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\page\\admin\\Admin.tsx",["205"],"import { JDbutton, JDcontainer, useModal, WindowSize } from '@janda-com/front';\r\nimport React from 'react';\r\nimport Header from '../../component/Header';\r\nimport { TModalInfo, WebPageModal } from '../../component/WebPageModal';\r\nimport { useWebPageDelete, useWebPageList } from '../../hook/useWebSite';\r\nimport { FwebPage } from '../../type/api';\r\nimport { WebPageCard } from './WebPageCard';\r\n\r\n\r\nexport const Admin: React.FC = () => {\r\n    const { items } = useWebPageList()\r\n    const webPageModalHook = useModal<TModalInfo>();\r\n    const [deleteMu, { loading }] = useWebPageDelete();\r\n\r\n    const handlePageEdit = (item: FwebPage) => () => {\r\n        webPageModalHook.openModal({ page: item })\r\n    }\r\n    const handlePageDelete = (id: string) => () => {\r\n        deleteMu({\r\n            variables: {\r\n                WebPageId: id\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleClick = () => {\r\n        webPageModalHook.openModal();\r\n    }\r\n\r\n    return <div>\r\n        <Header />\r\n        <JDcontainer verticalPadding size={WindowSize.full}>\r\n            <JDbutton mb thema=\"primary\" onClick={handleClick} >페이지 생성하기</JDbutton>\r\n            {items.map(item =>\r\n                <WebPageCard key={item._id} onDelete={handlePageDelete(item._id)} onEdit={handlePageEdit(item)} webPage={item} />\r\n            )}\r\n        </JDcontainer>\r\n        <WebPageModal key={webPageModalHook.info?.page._id} modalHook={webPageModalHook} />\r\n    </div>;\r\n};\r\n\r\nexport default Admin;\r\n","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\page\\View.tsx",["206","207","208"],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\PageLoading.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\page\\Login.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\page\\SignUp.tsx",["209"],"import React from 'react';\r\nimport { SignUpInput } from 'src/type/api';\r\nimport { JDcard, JDcontainer, JDsignUpUI, toast } from \"@janda-com/front\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Paths } from '../App';\r\nimport { useSignUp } from '../hook/useUser';\r\n\r\ninterface IProp { }\r\n\r\nexport const SignUp: React.FC<IProp> = () => {\r\n    const history = useHistory();\r\n    const [signUpMu] = useSignUp({\r\n        onCompleted: ({ SignUp }) => {\r\n            if (SignUp.ok) {\r\n                history.push(Paths.LOGIN);\r\n            }\r\n        }\r\n    });\r\n\r\n    const handleSignUp = (input: SignUpInput) => {\r\n        signUpMu({\r\n            variables: {\r\n                input\r\n            }\r\n        })\r\n    }\r\n\r\n    return <JDcontainer>\r\n        <JDcard>\r\n            <JDsignUpUI onSignUpClick={(info, validate) => {\r\n                const { email, name, num, password } = info;\r\n                if (!validate) return;\r\n                handleSignUp({\r\n                    email,\r\n                    name,\r\n                    phoneNumber: num,\r\n                    password: password\r\n                })\r\n            }} />\r\n        </JDcard>\r\n    </JDcontainer>;\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\apolloClient.tsx",["210"],"import { ApolloClient, from } from \"@apollo/client\";\r\nimport dotenv from \"dotenv\";\r\nimport uri from \"./uri\";\r\nimport cache from \"./cache\";\r\n// @ts-ignore\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { toast } from \"@janda-com/front\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\nconst headers = {\r\n  \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n};\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.map(({ message, locations, path }) => {\r\n      console.warn(\r\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n      );\r\n    });\r\n    toast.warn(\"알수 없는 문제가 발생했습니다. 문의 부탁드립니다.f\");\r\n  } else if (networkError) {\r\n    toast.warn(\"서버가 응답하지 않습니다.\");\r\n  }\r\n});\r\n\r\nconst fileUploadLink = createUploadLink({\r\n  uri,\r\n  headers,\r\n});\r\n\r\ndotenv.config({\r\n  path: \"../.env\",\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: from([fileUploadLink, errorLink]),\r\n  cache,\r\n});\r\n\r\nexport default client;","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\gql\\user.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useWebSite.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\usePageEidt.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useUser.ts",["211","212"],"import { useMutation, useQuery } from \"@apollo/client\"\r\nimport { SING_IN, SING_UP } from \"../apollo/gql/user\";\r\nimport { signIn, signInVariables, signUp, signUpVariables } from \"../type/api\";\r\nimport { generateMutationHook } from \"../utils/query\";\r\n\r\nexport const useSignIn = generateMutationHook<signIn,signInVariables>(SING_IN)\r\nexport const useSignUp = generateMutationHook<signUp,signUpVariables>(SING_UP)","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\WebPageModal.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\Header.tsx",["213","214"],"import React, { useContext } from 'react'\r\nimport { JDalign, JDicon } from '@janda-com/front';\r\nimport { TElements } from '@janda-com/front/dist/types/interface';\r\nimport { APPconetxt } from '../App';\r\n\r\ninterface IProps {\r\n    onMenuClick?: () => void;\r\n    rightChilds?: TElements\r\n    middleChilds?: TElements\r\n    leftChilds?: TElements\r\n    logo?: string\r\n}\r\n\r\nconst Header: React.FC<IProps> = ({ children, onMenuClick, rightChilds, leftChilds, middleChilds }) => {\r\n\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <JDalign flex={{\r\n                vCenter: true,\r\n                between: true\r\n            }} className=\"header__items\">\r\n                <div>\r\n                    {onMenuClick && <JDicon size=\"small\" hover onClick={onMenuClick} color=\"white\" icon=\"menu\" />}\r\n                    {leftChilds}\r\n                </div>\r\n                {middleChilds && <div>\r\n                    {middleChilds}\r\n                </div>}\r\n                {rightChilds && <div style={{\r\n                    justifySelf: \"flex-end\"\r\n                }}>\r\n                    {rightChilds}\r\n                </div>}\r\n            </JDalign>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\page\\admin\\WebPageCard.tsx",["215"],"import * as React from 'react';\r\nimport { Bold, copytoClipboard, Flex, JDbutton, JDcard, JDphotoFrame, JDtypho, Small, Tiny, toast, useModal } from '@janda-com/front';\r\nimport { JDicon } from '@janda-com/front';\r\nimport dayjs from 'dayjs';\r\nimport QrCode from \"qrcode.react\";\r\nimport { FwebPage } from '../../type/api';\r\nimport { CardProps } from '@janda-com/front/dist/components/cards/Card';\r\nimport { TEMPLATES } from '../../template/templates';\r\n\r\ninterface IProp extends CardProps {\r\n    webPage: FwebPage;\r\n    onEdit: () => void;\r\n    onDelete: () => void;\r\n}\r\n\r\nexport const WebPageCard: React.FC<IProp> = ({ webPage, onEdit: handleEdit, onDelete: handleDelete, ...props }) => {\r\n    const url = process.env.REACT_APP_CLIENT_URI! + \"?code=\" + webPage.key;\r\n\r\n    const handleCopy = () => {\r\n        copytoClipboard(url);\r\n        toast(\"클립보드에 복사 되었습니다.\")\r\n    }\r\n\r\n\r\n    const template = TEMPLATES.find(temp => temp.key === webPage.templateKey)!\r\n    return <JDcard {...props}>\r\n        <Flex between >\r\n            <div>\r\n                <JDtypho weight={600} size=\"h6\">{webPage.title} <Small weight={400}>{dayjs(webPage.createdAt).format(\"YYYY.MM.DD\")}</Small></JDtypho>\r\n                <JDtypho mb>\r\n                    {webPage.description}\r\n                </JDtypho>\r\n                <JDtypho mb flex={{ vCenter: true }} size=\"small\">\r\n                    <Tiny mr={\"tiny\"}>\r\n                        {url}\r\n                    </Tiny>\r\n                    <JDicon hover onClick={handleCopy} icon=\"copy\" />\r\n                </JDtypho>\r\n            </div>\r\n            <div>\r\n                <Bold mb>템플릿: {template.title}</Bold>\r\n                <JDphotoFrame unStyle={false} isBgImg style={{ height: \"80px\" }} src={template.img} />\r\n            </div>\r\n            <QrCode value=\"http://facebook.github.io/react/\" />\r\n        </Flex>\r\n\r\n        <JDbutton mr onClick={handleDelete} thema=\"error\">삭제하기</JDbutton>\r\n        <JDbutton onClick={handleEdit} thema=\"primary\">수정하기</JDbutton>\r\n    </JDcard>;\r\n};\r\n","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\ViewModeLayout.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\completeMsg.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\uri.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\cache.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\query.ts",["216","217","218"],"import { DocumentNode, MutationHookOptions, QueryHookOptions, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport {useLazyQuery} from \"@apollo/client\";\r\nimport { ListInitOptions, useListQuery } from \"../hook/useListQuery\";\r\nimport { DEFAULT_PAGE_INFO } from \"@janda-com/front\";\r\n\r\n\r\ntype TDefaultSort = {\r\n    defaultSort:any[]\r\n}\r\n\r\nexport const generateListQueryHook = <F,S,Q,V,ResultFragment>(\r\n    QUERY: DocumentNode,\r\n    queryInit: Partial<ListInitOptions<F, S>> = {}\r\n    ) => {\r\n\r\n    const listQueryHook = (\r\n        {\r\n            initialPageIndex = 0,\r\n            initialSort = [],\r\n            initialFilter,\r\n            initialViewCount = 20,\r\n            ...queryInit\r\n        }: Partial<ListInitOptions<F, S>> = {},\r\n        options: QueryHookOptions<Q, V> = {}\r\n    )=> {\r\n        const { variables: overrideVariables, ...ops } = options;\r\n        const { integratedVariable,...params } = useListQuery({\r\n            initialFilter,\r\n            initialPageIndex,\r\n            initialSort,\r\n            initialViewCount\r\n        })\r\n\r\n        const [getData, { data, loading: getLoading }] = useLazyQuery<Q,V>(QUERY,{\r\n            fetchPolicy: \"cache-and-network\",\r\n            // @ts-ignore\r\n            variables: {\r\n                ...integratedVariable,\r\n                ...overrideVariables\r\n            },\r\n            ...ops\r\n        })\r\n\r\n      \r\n        const operationName = getQueryName(QUERY);\r\n        // @ts-ignore\r\n        const items: ResultFragment[] = data?.[operationName]?.items || []\r\n        // @ts-ignore\r\n        console.log(operationName)\r\n        // @ts-ignore\r\n        console.log(data?.[operationName])\r\n        // @ts-ignore\r\n        console.log(data)\r\n        // @ts-ignore\r\n        const pageInfo: Fpage = data?.[operationName]?.page || DEFAULT_PAGE_INFO\r\n\r\n        useEffect(()=>{\r\n            getData()\r\n        },[\r\n            params.filter,\r\n            params.sort,\r\n            params.viewCount,\r\n            params.page\r\n        ])\r\n\r\n        return { pageInfo,  getLoading, items, ...params }\r\n    }\r\n\r\n    return listQueryHook\r\n}\r\n\r\n// refetchQueries: [getOperationName(BOOKING_LIST) || \"\"],\r\n\r\nexport const generateMutationHook = <M,V>(MUTATION:DocumentNode,defaultOptions?: MutationHookOptions<M,V>) => {\r\n    const mutationHook = (options?: MutationHookOptions<M,V>) => {\r\n        const muHook = useMutation<M, V>(MUTATION, {\r\n            ...defaultOptions,\r\n            ...options\r\n        });\r\n        return muHook\r\n    }\r\n    return mutationHook\r\n}\r\n\r\n\r\nexport const useGenerateFindQuery = <Q,V,ResultFragment>(findBy: keyof V,QUERY:DocumentNode) => {\r\n    const usefindQueryHook = (key:any, options:QueryHookOptions<Q, V> = {}) => {\r\n        const [getData, { data, loading }] = useLazyQuery<Q, V>(QUERY, {\r\n            skip: !key,\r\n            nextFetchPolicy: \"network-only\",\r\n            // @ts-ignore\r\n            variables: {\r\n                [findBy]: key\r\n            },\r\n            ...options,\r\n        })\r\n        \r\n        const operationName = getQueryName(QUERY);\r\n        // @ts-ignore\r\n        if(data?.[operationName] && !data[operationName].hasOwnProperty(\"data\")){\r\n            throw Error(\"data is not exist on response\")\r\n        }\r\n        // @ts-ignore\r\n        const item:ResultFragment | undefined = data?.[operationName].data || undefined;\r\n        \r\n        useEffect(()=>{\r\n            getData()\r\n        },[key])\r\n\r\n        return {item,loading}\r\n    }\r\n\r\n    return usefindQueryHook\r\n}\r\n\r\nexport const capitalize = (s:string) => {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1)\r\n  }\r\n\r\n\r\nexport const getQueryName = (QUERY:DocumentNode) => {\r\n    const operation = QUERY.definitions[0];\r\n    // @ts-ignore\r\n    const operationName = operation && operation.name.value;\r\n\r\n    return capitalize(operationName);\r\n}","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\gql\\webPage.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useMultiSelect.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\validater.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\pageEdit.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\type\\api.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\utils.tsx",["219"],"import { IselectedOption } from \"@janda-com/front/dist/types/interface\";\r\n\r\n\r\nexport function toOps<T, C extends keyof T>(op: Array<T>, id: C, label: C): IselectedOption[] {\r\n    return op.map((o) => ({\r\n        label: o[label] as any,\r\n        value: o[id] as any\r\n    }))\r\n}\r\n\r\n\r\nexport const opFind = (value: string | undefined, ops: IselectedOption[], noDefault?: boolean): IselectedOption | null => {\r\n    const defualt = noDefault ? null : ops[0]\r\n    return ops.find(o => o.value === value) || defualt\r\n}\r\n\r\nexport const opFilter = (value: string[], ops: IselectedOption[], noDefault?: boolean): IselectedOption[] => {\r\n    return ops.filter(o => value.includes(o.value))\r\n}\r\n\r\nexport default \"-\"","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\Template.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\type\\const.tsx",["220"],"import { IselectedOption } from \"@janda-com/front/dist/types/interface\";\r\nimport { Langs, WebPageType } from \"./api\";\r\n\r\nexport const PAGE_SELECT_OPS = [{\r\n    label: \"20개보기\",\r\n    value: 20,\r\n},\r\n{\r\n    label: \"50개보기\",\r\n    value: 50,\r\n},\r\n{\r\n    label: \"100개보기\",\r\n    value: 100,\r\n}];\r\n\r\n\r\n\r\nexport default \"-\"\r\n\r\nexport const LANG_SELECT_OPS: IselectedOption<Langs>[] = [\r\n    {\r\n        label: \"한국어\",\r\n        value: Langs.KR\r\n    },\r\n    {\r\n        label: \"영어\",\r\n        value: Langs.GB\r\n    },\r\n]\r\n\r\nexport const PAGE_TYPE_OPS: IselectedOption<WebPageType>[] = [\r\n    {\r\n        label: \"숙박 메뉴얼\",\r\n        value: WebPageType.HOUSE_MANUAL\r\n    },\r\n    {\r\n        label: \"강사 프로필\",\r\n        value: WebPageType.MY_PROFILE\r\n    },\r\n]","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\template\\templates.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\gql\\utils.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useListQuery.ts",["221"],"import { ISet } from \"@janda-com/front/dist/types/interface\";\r\nimport { useState } from \"react\";\r\nimport { OffsetPagingInput } from \"../type/api\";\r\n\r\nexport interface ListInitOptions<F, S> {\r\n    initialPageIndex: number,\r\n    initialViewCount: number\r\n    initialFilter: F,\r\n    initialSort: S[]\r\n}\r\n\r\nexport interface IListHook<F, S> {\r\n    setViewCount: ISet<number>;\r\n    filter: F;\r\n    sort: S[];\r\n    setSort: ISet<S[]>;\r\n    setFilter: ISet<F>;\r\n    setPage: ISet<number>;\r\n    viewCount: number;\r\n    page: number\r\n}\r\n\r\nexport function useListQuery<F, S>({ initialFilter, initialPageIndex, initialSort, initialViewCount }: ListInitOptions<F, S>) {\r\n    const [filter, setFilter] = useState<F>(initialFilter);\r\n    const [sort, setSort] = useState<S[]>(initialSort);\r\n    const [viewCount, setViewCount] = useState(initialViewCount);\r\n    const [page, setPage] = useState(initialPageIndex);\r\n\r\n    const integratedVariable = {\r\n        pagingInput: {\r\n            pageIndex: page,\r\n            pageItemCount: viewCount\r\n        },\r\n        filter,\r\n        sort,\r\n    }\r\n\r\n    return { filter, setFilter, setPage, integratedVariable, sort, setSort, viewCount, setViewCount, page }\r\n}","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\BackStepBar.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\template\\info\\sampleInfo.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\template\\source\\SampleTemplate.tsx",["222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238"],"import React, { useContext } from 'react';\r\nimport { IViewContext, ViewContext } from '../../page/View';\r\nimport { Helmet } from \"react-helmet\";\r\nimport $ from \"jquery\";\r\nimport { Upload } from '../../component/Upload';\r\nimport { Img } from '../../component/Img';\r\nimport { Content } from '../../component/Content';\r\n\r\ninterface IProp extends IViewContext {\r\n}\r\n\r\nexport const SampleTemplate: React.FC<IProp> = ({ edit, imgEdit, imgKit, src }) => {\r\n\r\n    return <div>\r\n        <Helmet>\r\n            <script src=\"template/sample/assets/js/jquery.min.js\"></script>\r\n            <script src=\"template/sample/assets/js/jquery.poptrox.min.js\"></script>\r\n            <script src=\"template/sample/assets/js/skel.min.js\"></script>\r\n            <script src=\"template/sample/assets/js/util.js\"></script>\r\n            <script src=\"template/sample/assets/js/main.js\"></script>\r\n            <link rel=\"stylesheet\" href=\"template/sample/assets/css/main.css\" />\r\n        </Helmet>\r\n        <header id=\"header\">\r\n            <div className=\"logo\"><a href=\"#\">Caminar <span>by TEMPLATED</span></a></div>\r\n        </header>\r\n        {/* Main */}\r\n        <section id=\"main\">\r\n            <div className=\"inner\">\r\n                {/* One */}\r\n                <section id=\"one\" className=\"wrapper style1\">\r\n                    <div className=\"image fit flush\">\r\n                        <Img {...imgKit(\"top_img\")} />\r\n                    </div>\r\n                    <header className=\"special\">\r\n                        <h2 {...edit(\"title1\")} />\r\n                        <p {...edit(\"title1_desc\")} />\r\n                    </header>\r\n                    <Content infoKey={\"content\"} />\r\n                    <div className=\"content\">\r\n                    </div>\r\n                </section>\r\n                {/* Two */}\r\n                <section id=\"two\" className=\"wrapper style2\">\r\n                    <header>\r\n                        <h2>Vestibulum Convallis</h2>\r\n                        <p>vehicula urna sed justo bibendum</p>\r\n                    </header>\r\n                    <div className=\"content\">\r\n                        <div className=\"gallery\">\r\n                            <div>\r\n                                <div className=\"image fit flush\">\r\n                                    <a href=\"template/sample/images/pic03.jpg\"><img src=\"template/sample/images/pic03.jpg\" /></a>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"image fit flush\">\r\n                                    <a href=\"template/sample/images/pic01.jpg\"><img src=\"template/sample/images/pic01.jpg\" /></a>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"image fit flush\">\r\n                                    <a href=\"template/sample/images/pic04.jpg\"><img src=\"template/sample/images/pic04.jpg\" /></a>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"image fit flush\">\r\n                                    <a href=\"template/sample/images/pic05.jpg\"><img src=\"template/sample/images/pic05.jpg\" /></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                {/* Three */}\r\n                <section id=\"three\" className=\"wrapper\">\r\n                    <div className=\"spotlight\">\r\n                        <div className=\"image flush\"><img src=\"template/sample/images/pic06.jpg\" /></div>\r\n                        <div className=\"inner\">\r\n                            <h3>Viverra Hendrerit</h3>\r\n                            <p>Curabitur eget semper ante. Morbi eleifend ultricies est, a blandit diam vehicula vel. Vestibulum porttitor nisi quis viverra hendrerit. Suspendisse vel volutpat nibh, vel elementum lacus. Maecenas commodo pulvinar dui, at cursus metus imperdiet vel.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"spotlight alt\">\r\n                        <div className=\"image flush\"><img src=\"template/sample/images/pic07.jpg\" /></div>\r\n                        <div className=\"inner\">\r\n                            <h3>Curabitur Eget</h3>\r\n                            <p>Curabitur eget semper ante. Morbi eleifend ultricies est, a blandit diam vehicula vel. Vestibulum porttitor nisi quis viverra hendrerit. Suspendisse vel volutpat nibh, vel elementum lacus. Maecenas commodo pulvinar dui, at cursus metus imperdiet vel.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"spotlight\">\r\n                        <div className=\"image flush\"><img src=\"template/sample/images/pic08.jpg\" /></div>\r\n                        <div className=\"inner\">\r\n                            <h3>Morbi Eleifend</h3>\r\n                            <p>Curabitur eget semper ante. Morbi eleifend ultricies est, a blandit diam vehicula vel. Vestibulum porttitor nisi quis viverra hendrerit. Suspendisse vel volutpat nibh, vel elementum lacus. Maecenas commodo pulvinar dui, at cursus metus imperdiet vel.</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </section>\r\n        {/* Footer */}\r\n        <footer id=\"footer\">\r\n            <div className=\"container\">\r\n                <ul className=\"icons\">\r\n                    <li><a href=\"#\" className=\"icon fa-twitter\"><span className=\"label\">Twitter</span></a></li>\r\n                    <li><a href=\"#\" className=\"icon fa-facebook\"><span className=\"label\">Facebook</span></a></li>\r\n                    <li><a href=\"#\" className=\"icon fa-instagram\"><span className=\"label\">Instagram</span></a></li>\r\n                    <li><a href=\"#\" className=\"icon fa-envelope-o\"><span className=\"label\">Email</span></a></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"copyright\">\r\n                © Untitled. All rights reserved. Images <a href=\"https://unsplash.com\">Unsplash</a> Design <a href=\"https://templated.co\">TEMPLATED</a>\r\n            </div>\r\n        </footer>;\r\n    </div>\r\n};\r\n\r\nexport default SampleTemplate;","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\PageEditBtn.tsx",["239"],"import React, { useContext } from 'react';\r\nimport { useWebPageUpdate } from '../hook/useWebSite';\r\nimport { ViewContext } from '../page/View';\r\n\r\ninterface IProp {\r\n}\r\n\r\nexport const PageEditBtn: React.FC<IProp> = () => {\r\n    const { editMode, setEditMode, page, originPage } = useContext(ViewContext)!;\r\n    const [updateWebPageMu, { loading }] = useWebPageUpdate()\r\n\r\n    const handleEdit = () => {\r\n        const accept = window.confirm(\"변경내용을 저장 하시겠습니까? (취소시 초기화됨)\");\r\n        if (!accept)\r\n            window.location.reload()\r\n        else\r\n            updateWebPageMu({\r\n                variables: {\r\n                    id: originPage?._id,\r\n                    input: {\r\n                        value: page\r\n                    }\r\n                }\r\n            });\r\n\r\n        setEditMode(false)\r\n    }\r\n\r\n    const handleEditFinish = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    return <div className=\"pageEditBtn\" onClick={editMode ? handleEdit : handleEditFinish} >\r\n        {editMode ? \"편집종료\" : \"편집모드\"}\r\n    </div>\r\n\r\n};\r\n","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\utils\\deepCopy.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\Img.tsx",["240"],"import { IDiv } from '@janda-com/front/dist/types/interface';\r\nimport React from 'react';\r\nimport { Upload } from './Upload';\r\n\r\nexport interface IEditKit {\r\n    upload: (url: string) => void;\r\n    bg: () => {\r\n        backgroundImage: string;\r\n    };\r\n    src: () => any;\r\n}\r\n\r\ninterface IProp extends IDiv, IEditKit {\r\n\r\n}\r\n\r\nexport const Img: React.FC<IProp> = ({ children, src, upload, ...props }) => {\r\n    return <div {...props}>\r\n        <img  {...src} />\r\n        <Upload onUpload={upload} />\r\n    </div>;\r\n};\r\n","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\Upload.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\hook\\useUpload.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\apollo\\gql\\file.ts",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\Content.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\editor\\Editor.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\editor\\EditorView.tsx",[],"C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\TimeSpace.tsx",["241","242"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { ViewContext } from '../page/View';\r\n\r\ninterface IProp {\r\n    infoKey: string\r\n}\r\n\r\nexport const TimeSpace: React.FC<IProp> = ({ infoKey }) => {\r\n    const { editMode, page, setPage, lang } = useContext(ViewContext)!;\r\n    const [height, setHeight] = useState(0);\r\n\r\n    const ref = useRef<HTMLIFrameElement>(null);\r\n    const sampleSrc = \"http://localhost:3001/?sgc=E0J1T0&sc=PBPUZ4&mode=mini/#/%EC%83%98%ED%94%8C%20%EC%83%81%ED%92%881\"\r\n\r\n    useEffect(() => {\r\n        window.onmessage = (e: MessageEvent) => {\r\n            if (e.data.hasOwnProperty(\"frameHeight\")) {\r\n                setHeight(e.data.frameHeight)\r\n                // document.getElementById(\"TIME_SPACE\")?.style.height = `${e.data.frameHeight + 30}px`;\r\n            }\r\n        };\r\n    }, [])\r\n    if (!page[infoKey]) return null;\r\n    const link = page[infoKey][lang];\r\n    return !editMode ? <iframe style={{\r\n        width: \"100%\",\r\n        height\r\n    }} ref={ref} src={sampleSrc} /> :\r\n        <div>\r\n            <span>타임스페이스 링크</span>\r\n            <input onBlur={(e) => {\r\n                const value = e.currentTarget.value\r\n                page[infoKey][lang] = value;\r\n                setPage({ ...page })\r\n            }} style={{\r\n                padding: \"10px\",\r\n                height: \"20px\",\r\n                border: \"1px solid\",\r\n            }} />\r\n        </div>\r\n};\r\n","C:\\Users\\minjae\\Desktop\\projects\\janda\\house-manual\\client\\src\\component\\LanguageChnager.tsx",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":35},{"ruleId":"247","severity":1,"message":"251","line":13,"column":24,"nodeType":"249","messageId":"250","endLine":13,"endColumn":31},{"ruleId":"247","severity":1,"message":"248","line":2,"column":28,"nodeType":"249","messageId":"250","endLine":2,"endColumn":36},{"ruleId":"247","severity":1,"message":"252","line":9,"column":20,"nodeType":"249","messageId":"250","endLine":9,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":38,"column":8,"nodeType":"255","endLine":38,"endColumn":14,"suggestions":"256"},{"ruleId":"247","severity":1,"message":"257","line":3,"column":43,"nodeType":"249","messageId":"250","endLine":3,"endColumn":48},{"ruleId":"258","severity":1,"message":"259","line":16,"column":54,"nodeType":"260","messageId":"261","endLine":16,"endColumn":56},{"ruleId":"247","severity":1,"message":"262","line":1,"column":10,"nodeType":"249","messageId":"250","endLine":1,"endColumn":21},{"ruleId":"247","severity":1,"message":"263","line":1,"column":23,"nodeType":"249","messageId":"250","endLine":1,"endColumn":31},{"ruleId":"247","severity":1,"message":"264","line":1,"column":17,"nodeType":"249","messageId":"250","endLine":1,"endColumn":27},{"ruleId":"247","severity":1,"message":"265","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":20},{"ruleId":"247","severity":1,"message":"266","line":2,"column":100,"nodeType":"249","messageId":"250","endLine":2,"endColumn":108},{"ruleId":"247","severity":1,"message":"267","line":8,"column":6,"nodeType":"249","messageId":"250","endLine":8,"endColumn":18},{"ruleId":"253","severity":1,"message":"268","line":60,"column":11,"nodeType":"255","endLine":65,"endColumn":10,"suggestions":"269"},{"ruleId":"253","severity":1,"message":"268","line":109,"column":11,"nodeType":"255","endLine":109,"endColumn":16,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":21,"column":1,"nodeType":"273","endLine":21,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":19,"column":1,"nodeType":"273","endLine":19,"endColumn":19},{"ruleId":"247","severity":1,"message":"274","line":3,"column":10,"nodeType":"249","messageId":"250","endLine":3,"endColumn":27},{"ruleId":"247","severity":1,"message":"264","line":1,"column":17,"nodeType":"249","messageId":"250","endLine":1,"endColumn":27},{"ruleId":"247","severity":1,"message":"275","line":2,"column":24,"nodeType":"249","messageId":"250","endLine":2,"endColumn":35},{"ruleId":"247","severity":1,"message":"276","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":9},{"ruleId":"247","severity":1,"message":"277","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":16},{"ruleId":"278","severity":1,"message":"279","line":24,"column":35,"nodeType":"280","endLine":24,"endColumn":47},{"ruleId":"281","severity":1,"message":"282","line":35,"column":25,"nodeType":"280","endLine":35,"endColumn":51},{"ruleId":"283","severity":1,"message":"284","line":52,"column":80,"nodeType":"280","endLine":52,"endColumn":126},{"ruleId":"283","severity":1,"message":"284","line":57,"column":80,"nodeType":"280","endLine":57,"endColumn":126},{"ruleId":"283","severity":1,"message":"284","line":62,"column":80,"nodeType":"280","endLine":62,"endColumn":126},{"ruleId":"283","severity":1,"message":"284","line":67,"column":80,"nodeType":"280","endLine":67,"endColumn":126},{"ruleId":"283","severity":1,"message":"284","line":76,"column":54,"nodeType":"280","endLine":76,"endColumn":100},{"ruleId":"283","severity":1,"message":"284","line":83,"column":54,"nodeType":"280","endLine":83,"endColumn":100},{"ruleId":"283","severity":1,"message":"284","line":90,"column":54,"nodeType":"280","endLine":90,"endColumn":100},{"ruleId":"278","severity":1,"message":"279","line":103,"column":25,"nodeType":"280","endLine":103,"endColumn":65},{"ruleId":"278","severity":1,"message":"279","line":104,"column":25,"nodeType":"280","endLine":104,"endColumn":66},{"ruleId":"278","severity":1,"message":"279","line":105,"column":25,"nodeType":"280","endLine":105,"endColumn":67},{"ruleId":"278","severity":1,"message":"279","line":106,"column":25,"nodeType":"280","endLine":106,"endColumn":68},{"ruleId":"247","severity":1,"message":"251","line":10,"column":31,"nodeType":"249","messageId":"250","endLine":10,"endColumn":38},{"ruleId":"283","severity":1,"message":"284","line":19,"column":9,"nodeType":"280","endLine":19,"endColumn":26},{"ruleId":"247","severity":1,"message":"285","line":24,"column":11,"nodeType":"249","messageId":"250","endLine":24,"endColumn":15},{"ruleId":"286","severity":1,"message":"287","line":25,"column":24,"nodeType":"280","endLine":28,"endColumn":36},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'Langs' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setPage' and 'target.value'. Either include them or remove the dependency array.","ArrayExpression",["290"],"'toast' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useMutation' is defined but never used.","'useQuery' is defined but never used.","'useContext' is defined but never used.","'APPconetxt' is defined but never used.","'useModal' is defined but never used.","'TDefaultSort' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["291"],["292"],"import/no-anonymous-default-export","Assign literal to a variable before exporting as module default","ExportDefaultDeclaration","'OffsetPagingInput' is defined but never used.","'ViewContext' is defined but never used.","'$' is defined but never used.","'Upload' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'link' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [item, setPage, target.value]",{"range":"299","text":"300"},"Update the dependencies array to be: [params.filter, params.sort, params.viewCount, params.page, getData]",{"range":"301","text":"302"},"Update the dependencies array to be: [getData, key]",{"range":"303","text":"304"},[1493,1499],"[item, setPage, target.value]",[1894,2016],"[params.filter, params.sort, params.viewCount, params.page, getData]",[3430,3435],"[getData, key]"]